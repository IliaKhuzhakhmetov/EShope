apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "ru.don.eshope"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    ext.getBranch = { ->
        def cmd = "git symbolic-ref --short HEAD"
        def proc = cmd.execute()

        def text = proc.text.trim()

        return text
    }

    ext.getTag = { ->
        def cmd = "git describe --abbrev=0 --tags"
        def proc = cmd.execute()
        return proc.text.trim()
    }

    signingConfigs {
        def filename = "../keystore.properties"

        release {
            file(filename).with { propertiesFile ->
                if (propertiesFile.canRead()) {
                    def properties = new Properties()
                    properties.load(new FileInputStream(propertiesFile))

                    storeFile file(properties['storeFile'])
                    keyAlias properties['keyAlias']
                    keyPassword properties['keyPassword']
                    storePassword properties['storePassword']
                } else println "Unable to read $filename"
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true

            manifestPlaceholders = [enableCrashReporting: "false"]

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def ver = variant.versionName
                    outputFileName = "${variant.flavorName}_${variant.buildType.name}_${ver}.apk"
                }
            }
        }

        release {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting: "true"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    def devDimensions = "dev"
    flavorDimensions devDimensions
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    productFlavors {

        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        branch {
            dimension devDimensions
            versionCode code
            versionName "${getBranch()}"
        }

        tag {
            dimension devDimensions
            versionCode code
            versionName "${getTag()}"
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

ext {
    room_version = '2.2.4'
    appCompat = '1.1.0'
    constraint = '1.1.3'
    koin_version = '2.0.1'
    retrofit_version = '2.6.2'
    RX = '2.1.0'
    okhttp = '4.2.2'
    databinding_kapt = '3.1.4'
    material = '1.2.0-alpha05'
    archLifecycleVersion = '2.2.0'
    analytics = '17.2.3'
    crashlytics_version = '2.10.1@aar'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0-alpha01'
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"

    // CrashLitycs
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    // Material
    implementation "com.google.android.material:material:$material"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    //DataBinding annotation processor
    kapt "com.android.databinding:compiler:$databinding_kapt"

    // Koin DI library
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    //for work with network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //RX
    implementation "io.reactivex.rxjava2:rxandroid:$RX"
    implementation "io.reactivex.rxjava2:rxkotlin:$RX"

    //okHttp Client
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
}

